@inherits LayoutComponentBase
@using BaseUI.Components
@inject NavigationManager Navigation



<CascadingValue Value="@this">
    <Syncfusion.Blazor.Spinner.SfSpinner 
        @ref="@SpinnerObj" 
        Type="Syncfusion.Blazor.Spinner.SpinnerType.HighContrast" 
        Size="50" 
        CssClass="e-spin-overlay" 
        ZIndex="9999">
    </Syncfusion.Blazor.Spinner.SfSpinner>
    <div class="page">
        <AuthorizeView>
            <Authorized>
                <div class="sidebar">
                    <NavMenu />
                </div>
            </Authorized>
        </AuthorizeView>
        
        <div class="main">
            <AuthorizeView>
                <Authorized>
                    <div class="top-row px-4">
                        <a href="Identity/Account/Logout"
                           class="font-weight-bold text-danger">
                            Cerrar Sesión <i class=""></i>
                        </a>
                    </div>
                </Authorized>
            </AuthorizeView>
            <div class="content" style="padding:1.5rem">
                @Body
                <MessageCardComponent @ref="messageCardComponent"></MessageCardComponent>
            </div>
        </div>
    </div>
</CascadingValue>

@code{
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    public AuthenticationState authenticationState;
    protected override async void OnParametersSet()
    {
        authenticationState = await AuthenticationStateTask;
    }
   
    #region MessageCardComponent

    private MessageCardComponent messageCardComponent;

    public async Task ShowCardMessage(string type, string message, string title = "", string url = "")
    {
        await messageCardComponent.ShowMessage(type, message, title, url);
    }

    #endregion

    #region Spinner Global

    private Syncfusion.Blazor.Spinner.SfSpinner SpinnerObj;

    public async Task ShowSpinner()
    {
        await SpinnerObj.ShowAsync();
    }

    public async Task HideSpinner()
    {
        await SpinnerObj.HideAsync();
    }

    #endregion
}