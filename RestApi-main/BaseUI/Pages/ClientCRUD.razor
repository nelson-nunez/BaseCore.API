@page "/ClientCRUD"
@page "/ClientCRUD/{CRUDMode:int}"
@page "/ClientCRUD/{Id:int}/{CRUDMode:int}"

@using Syncfusion.Blazor.Navigations
@using BaseRest.Core.Model.DTO
@using BaseUI.Data
@using BaseUI.Helpers
@using BaseUI.Components
@using BaseUI.Services
@inject NavigationManager NavManager
@inject CustomerService CustomerService
@inject GenderService GenderService

<EditForm Model="@newCustomer" OnValidSubmit="@SaveCustomer">
    <SfTab>
        <TabItems>
            <TabItem>
                <ChildContent>
                    <TabHeader Text="Datos de Clientes"></TabHeader>
                </ChildContent>
                <ContentTemplate>
                    <FluentValidator TValidator="CustomerValidator" />
                    <AccordionComponent datatarget="collapseTwo" accordiontitle="Datos de Cliente">
                        <!--#region Datos revendedor-->
                        <div class="row align-items-center">
                            <div class="col-md-4">
                                <div class="form-group row text-sm-left text-md-right">
                                    <label class="col-form-label col-sm-3 my-auto">Razón Social: </label>
                                    <div class="col-sm-9 my-auto">
                                        <SfTextBox ID="NametextBox"
                                                   @bind-Value="@newCustomer.Name"
                                                   Placeholder="Razón Social"
                                                   Enabled="@enabled"
                                                   TabIndex="1"
                                                   CssClass="allowonlyletters" maxlength="30">
                                        </SfTextBox>
                                    </div>
                                </div>
                                <div class="form-group row text-sm-left text-md-right">
                                    <div class="col-sm-3 my-auto"></div>
                                    <div class="col-sm-9 my-auto">
                                        <ValidationMessage For="() => newCustomer.Name"></ValidationMessage>
                                    </div>                               
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group row text-sm-left text-md-right">
                                    <label class="col-form-label col-sm-3 my-auto">Nro. CUIT: </label>
                                    <div class="col-sm-9 my-auto">
                                        <SfTextBox TValue="string"
                                                   @bind-Value="@newCustomer.CUIL"
                                                   Placeholder="Ingrese su CUIT"
                                                   Format="0"
                                                   Enabled="@enabled"
                                                   TabIndex="2"
                                                   maxlength="11"
                                                   ShowSpinButton="false" CssClass="allowonlynumbers">
                                        </SfTextBox>
                                    </div>
                                </div>
                                <div class="form-group row text-sm-left text-md-right">
                                    <div class="col-sm-3 my-auto"></div>
                                    <div class="col-sm-9 my-auto">
                                        <ValidationMessage For="() => newCustomer.CUIL"></ValidationMessage>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group row text-sm-left text-md-right">
                                    <label class="col-form-label col-sm-3 my-auto">Fecha nac.: </label>
                                    <div class="col-sm-9 my-auto">
                                        <SfDatePicker @bind-Value="@newCustomer.BirthDate" 
                                                      CssClass="allowonlydates" 
                                                      ShowClearButton="true" 
                                                      Enabled="@enabled"
                                                      TabIndex="3">
                                        </SfDatePicker>
                                    </div>
                                </div>
                                <div class="form-group row text-sm-left text-md-right">
                                    <div class="col-sm-3 my-auto"></div>
                                    <div class="col-sm-9 my-auto">
                                        <ValidationMessage For="() => newCustomer.BirthDate"></ValidationMessage>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row align-items-center">
                            <div class="col-md-4">
                                <div class="form-group row text-sm-left text-md-right">
                                    <label class="col-form-label col-sm-3 my-auto">Sexo: </label>
                                    <div class="col-sm-9 my-auto">
                                        <SfDropDownList CssClass="custom-select e-multi-column"
                                                        TValue="int"
                                                        TItem="GenderDTO"
                                                        Placeholder="Seleccione una opción"
                                                        DataSource="@gendersList"
                                                        @bind-Value="@newCustomer.GenderId"
                                                        TabIndex="4"
                                                        Enabled="@enabled">
                                            <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                        </SfDropDownList>
                                    </div>
                                </div>
                                <div class="form-group row text-sm-left text-md-right">
                                    <div class="col-sm-3 my-auto"></div>
                                    <div class="col-sm-9 my-auto">
                                        <ValidationMessage For="() => newCustomer.GenderId"></ValidationMessage>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group row text-sm-left text-md-right">
                                    <label class="col-form-label col-sm-3 my-auto">Nro. Teléfono: </label>
                                    <div class="col-sm-9 my-auto">
                                        <SfTextBox TValue="string"
                                                   @bind-Value="@newCustomer.Phone"
                                                   Placeholder="Ingrese su Teléfono"
                                                   Format="0"
                                                   Enabled="@enabled"
                                                   TabIndex="5"
                                                   maxlength="14"
                                                   ShowSpinButton="false" CssClass="allowonlynumbers">
                                        </SfTextBox>
                                    </div>
                                </div>
                                <div class="form-group row text-sm-left text-md-right">
                                    <div class="col-sm-3 my-auto"></div>
                                    <div class="col-sm-9 my-auto">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4"> </div>
                        </div>
                    </AccordionComponent>
                </ContentTemplate>
            </TabItem>
            <TabItem>
                <ChildContent>
                    <TabHeader Text="Archivos Adjuntos"></TabHeader>
                </ChildContent>
            </TabItem>
        </TabItems>
    </SfTab>
    <div class="col-md-2 my-auto group-btn">
        <div class="form-group">
        </div>
    </div>
    <ValidationSummary />

    <ActionButtonsComponent 
        CRUDMode="CRUDMode" 
        Clear="CleanFields" 
        Delete="DeleteCustomer" 
        Back="BackToMenu" >
    </ActionButtonsComponent>
</EditForm>

@code {

    #region Nav vars

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public int CRUDMode { get; set; }

    private bool isHidden { get; set; } = false;

    bool enabled = true;

    #endregion

    #region Vars

    [CascadingParameter]
    public MainLayout mainLayoutObj { get; set; }

    CustomerDTO newCustomer = new CustomerDTO();

    public bool IsVisible { get; set; } = false;

    List<GenderDTO> gendersList = new List<GenderDTO>();

    #endregion

    #region Methods

    protected override async void OnInitialized()
    {
        try
        {
            gendersList = await GenderService.GetGendersAsync();
            switch (CRUDMode)
            {
                case ViewMode.Add:
                    newCustomer = new CustomerDTO();
                    enabled = true;
                    break;

                case ViewMode.Update:
                    newCustomer = await CustomerService.GetCustomerbyIdAsync(Id);
                    enabled = true;
                    break;

                case ViewMode.ReadOnly:
                    newCustomer = await CustomerService.GetCustomerbyIdAsync(Id);
                    enabled = false;
                    break;

                case ViewMode.Delete:
                    newCustomer = await CustomerService.GetCustomerbyIdAsync(Id);
                    enabled = false;
                    break;

                default:
                    newCustomer = new CustomerDTO();
                    enabled = true;
                    break;
            }
        }
        catch (Exception ex)
        {
            NavManager.NavigateTo($"/ErrorPage/{ex.Message.Replace("/", "-")}");
            return;
        }
        finally
        {
            StateHasChanged();
        }
    }

    public async Task SaveCustomer()
    {
        try
        {
            var response = await CustomerService.SaveCustomerAsync(newCustomer);
            await mainLayoutObj.ShowCardMessage(MessageTypes.Information, response.Message);
        }
        catch (Exception ex)
        {
            await mainLayoutObj.ShowCardMessage(MessageTypes.Warning, ex.Message);
        }
        finally
        {
            await mainLayoutObj.HideSpinner();
        }
    }

    public async Task DeleteCustomer()
    {
        try
        {
            var response = await CustomerService.DeleteCustomerAsync(newCustomer.Id);
            await mainLayoutObj.ShowCardMessage(MessageTypes.Information, response.Message);
        }
        catch (Exception ex)
        {
            await mainLayoutObj.ShowCardMessage(MessageTypes.Warning, ex.Message);
        }
        finally
        {
            await mainLayoutObj.HideSpinner();
        }
    }

    public async Task BackToMenu()
    {
        NavManager.NavigateTo("/ClientList");
    }

    public async Task CleanFields()
    {
        newCustomer = new CustomerDTO();
        StateHasChanged();
    }

    #endregion

}
